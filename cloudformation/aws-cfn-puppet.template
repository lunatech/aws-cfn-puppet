{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description": "aws-cfn-puppet", 

    "Parameters" : {

	"CCInstanceType" : {
	    "Description" : "EC2 instance type for CC nodes",
	    "Type" : "String",
	    "Default" : "t1.micro",
	    "AllowedValues" : [ "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge" ],
	    "ConstraintDescription" : "Must be a valid instance type"
	},

	"FEInstanceType" : {
	    "Description" : "EC2 instance type for FE nodes",
	    "Type" : "String",
	    "Default" : "t1.micro",
	    "AllowedValues" : [ "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge" ],
	    "ConstraintDescription" : "Must be a valid instance type"
	},

	"MinFEInstances" : {
	    "Description" : "Minimum number of instances in FEAutoScalingGroup",
	    "Type" : "Number",
	    "Default" : "1",
	    "MinValue" : "1",
	    "ConstraintDescription": "Must be a whole number >= 1"
	},

	"MaxFEInstances" : {
	    "Description" : "Maximum number of instances in FEAutoScalingGroup",
	    "Type" : "Number",
	    "Default" : "2",
	    "ConstraintDescription": "Must be a whole number >= MinFEInstances"
	},

	"BEInstanceType" : {
	    "Description" : "EC2 instance type for BE nodes",
	    "Type" : "String",
	    "Default" : "t1.micro",
	    "AllowedValues" : [ "t1.micro", "m1.small", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "c1.medium", "c1.xlarge", "cc1.4xlarge" ],
	    "ConstraintDescription" : "Must be a valid instance type"
	},

	"MinBEInstances" : {
	    "Description" : "Minimum number of instances in BEAutoScalingGroup",
	    "Type" : "Number",
	    "Default" : "1",
	    "MinValue" : "1",
	    "ConstraintDescription": "Must be a whole number >= 1"
	},

	"MaxBEInstances" : {
	    "Description" : "Maximum number of instances in BEAutoScalingGroup",
	    "Type" : "Number",
	    "Default" : "2",
	    "ConstraintDescription": "Must be a whole number >= MinBEInstances"
	},

	"AppQueueVisibilityTimeout" : {
	    "Description" : "Visibility timeout (in seconds) for the application queue",
	    "Type" : "Number",
	    "Default" : "30",
	    "MinValue" : "30",
	    "ConstraintDescription" : "Must be a whole number >= 30"
	},

	"KeyName" : {
	    "Description" : "Name of EC2 key pair for SSH access to EC2 instances",
	    "Type" : "String"
	} 

    },

#include "mappings.template"

    "Resources" : { 

#include "sg.template"

	"CFNInitUser" : {
	    "Type" : "AWS::IAM::User",
	    "Properties" : {
		"Policies": [{
		    "PolicyName": "AccessForCFNInit",
		    "PolicyDocument" : {
			"Statement": [
			    { "Effect" : "Allow",
			      "Action" : "cloudformation:DescribeStackResource",
			      "Resource" : "*"
			    }
			]
		    }
		}]
	    }
	},

	"CFNInitUserKeys" : {
	    "Type" : "AWS::IAM::AccessKey",
	    "Properties" : {
		"UserName" : { "Ref": "CFNInitUser" }
	    }
	},

	"AppUser" : {
	    "Type" : "AWS::IAM::User",
	    "Properties" : {
		"Policies": [{
		    "PolicyName": "AccessForAppUser",
		    "PolicyDocument" : {
			"Statement": [
			    { "Effect" : "Allow",
			      "Action" : [ "s3:Get*", "s3:List*", "s3:Put*", "s3:Delete*" ],
			      "Resource" : [ { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref" : "AppBucket" } , "/*" ] ] } ]
			    },
			    { "Effect" : "Allow",
			      "Action" : [ "sqs:*" ],
			      "Resource" : [ { "Fn::GetAtt" : [ "AppQueue", "Arn" ] } ]
			    },
			    { "Effect" : "Allow",
			      "Action" : [ "sdb:Batch*", "sdb:DeleteAttributes", "sdb:DomainMetadata", "sdb:GetAttributes", "sdb:ListDomains", "sdb:PutAttributes", "sdb:Select" ],
			      "Resource" : [ { "Fn::Join" : [ "", [ "arn:aws:sdb:", { "Ref" : "AWS::Region" }, "::domain/", { "Ref" : "AppQueueDeadLetterOffice" } ] ] } ]
			    },
	{ "Effect": "Allow",
	"Action" : "sqs:ListQueues",
	"Resource" : "*" }
			]
		    }
		}]
	    }
	},

	"AppUserKeys" : {
	    "Type" : "AWS::IAM::AccessKey",
	    "Properties" : {
		"UserName" : { "Ref": "AppUser" }
	    }
	},

	"AppBucket" : {
	    "Type" : "AWS::S3::Bucket"
	},

	"AppQueue" : {
	    "Type" : "AWS::SQS::Queue",
	    "Properties" : {
		"VisibilityTimeout" : { "Ref" : "AppQueueVisibilityTimeout" }
	    }
	},

	"AppQueueDeadLetterOffice" : {
	    "Type" : "AWS::SDB::Domain"
	},

#include "cc.template"

#include "fe.template"

#include "be.template"

    },
	
    "Outputs" : {

	"cc1PublicDNSName" : {
	    "Value" : { "Fn::GetAtt" : [ "cc1", "PublicDnsName" ] },
	    "Description" : "Public DNS Name of cc1"
	},

	"elb1PublicDNSName" : {
	    "Value" : { "Fn::GetAtt" : [ "elb1", "DNSName" ] },
	    "Description" : "Public DNS name of elb1" 
	},

	"appBucketURL" : {
	    "Value" : { "Fn::Join" : [ "", [ "https://", { "Fn::GetAtt" : [ "AppBucket", "DomainName" ] } ] ] },
	    "Description" : "URL of application S3 bucket"
	},

	"appQueueURL" : {
	    "Value" : { "Ref" : "AppQueue" },
	    "Description" : "URL of application SQS Queue"
	},

	"appQueueDeadLetterOfficeDomainName" : {
	    "Value" : { "Ref" : "AppQueueDeadLetterOffice" },
	    "Description" : "Name of the SDB domain for storing undeliverable messages sent to AppQueue"
	}

    }

}
